Тест-дизайн – это этап тестирования ПО. На нем проектируются и создаются тест-кейсы, которые будут соответствовать определенным заранее критериям качества и целям тестирования. Цель тест-дизайна — создать наборы тестовых случаев, обеспечивающих оптимальное тестовое покрытие.
Разработка тестов начинается после проведения исследования ПО, когда цели определены, а критерии тестирования заданы и выполняются.
Благодаря тест-дизайну мы:
•	создаем тесты, помогающие выявлять серьезные ошибки
•	вдумчиво подходим к тестированию и не тратим ресурсы впустую
•	сводим к минимуму количество тестов, необходимых для тестирования продукта.
Класс эквивалентности (Equivalence class) – это набор входных (или выходных) данных ПО, которые обрабатываются программой по одному алгоритму или приводят к одному результаты. То есть, это некое множество значений, которое вы можете подставлять в программу и получать один и тот же результат. 
Поэтому, самые простые классы эквивалентности, на которые делятся проверки, это 2 основных класса: позитивные и негативные сценарии.
=========================================================
Допустим, есть интернет-магазин, который предлагает разные тарифы на доставку в зависимости от стоимости корзины. Например:
I.	Стоимость доставки для заказов на сумму менее $100 составляет $15.
II.	Стоимость доставки для заказов на сумму более $100 составляет $5.
III.	При заказе от $300 долларов доставка бесплатна.
У нас есть следующие ценовые категории для работы:
I.	от $1 до $100.
II.	от $100 до $300.
III.	$300 и выше.
При использовании техники эквивалентного разделения мы получаем три набора данных для тестирования:
•	От $1 до $100:
-  допустимые значения: любая цена в диапазоне от 1 до 99,99
-  недопустимые значения: любая цена ниже 1 или выше 99,99
•	От $100 до $300:
 - допустимые значения: любая цена в диапазоне от 100 до 299,99
 -  недопустимые значения: любая цена ниже 100 или выше 299,99
•	$300 и выше:
- допустимые значения: любая цена выше 299,99;
- недопустимые значения: любая цена ниже 300.
Таким образом, мы можем выбрать несколько чисел из каждого диапазона цен и предположить, что остальные числа из этих диапазонов будут давать такие же результаты.

Граничные значения — это те места, в которых один класс эквивалентности переходит в другой. По своей сути это техника, которая дополняет технику классов эквивалентности.
Важно проверять граничные значения, потому что именно на границах чаще всего допускаются ошибки при написании кода и формулировании требований.
Возьмем предыдущий сценарий с различными тарифами на доставку. У нас те же данные, но другой подход к их использованию. Предполагая, что ошибки наиболее вероятны на границах диапазонов, мы тестируем только «граничные» числа:
•	От $1 до $100:
- допустимые граничные значения: 1,00, 1,01, 99,99
- недопустимые граничные значения: 0,99, 100,00, 100,01
•	От $100 до $300:
- допустимые граничные значения: 100,00, 100,01, 299,99;
- недопустимые граничные значения: 99,99, 300,00;
•	$300 и выше:
- допустимые граничные значения: 300,00, 300,01;
- недопустимые граничные значения: 299,99.

Комбинаторные техники тест дизайна — это техники. которые позволяют выделить подходящую подгруппу тестовых комбинаций при тестировании объекта с множественными параметрами в случаях. когда эти параметры состоят из нескольких значений и это приводит к появлению большого числа комбинаций, которые нужно протестировать.
Цель - создать комбинации входных параметров на основе одного из алгоритмов.
Все комбинации (All combinations) - этот алгоритм подразумевает генерацию всех возможных комбинаций. Это означает исчерпывающее тестирование и имеет смысл только при разумном количестве комбинаций. Например, 3 переменные с 3 значениями для каждой дают нам матрицу параметров 3х3 с 27 возможными комбинациями.
Тестирование каждого выбора (метод минимальных проверок) - комбинаторный метод тестирования, где каждое значение каждого параметра должно быть использовано хотя бы один раз в тестовом наборе, и минимальное количество тестов равно максимальному количеству значений какого-то параметра.
(недостающие значения просто дописываются по порядку)
